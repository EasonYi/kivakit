<?xml version="1.0" encoding="UTF-8" standalone="no"?><svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" contentScriptType="application/ecmascript" contentStyleType="text/css" height="696.875px" preserveAspectRatio="none" style="width:1512px;height:696px;background:#333333;" version="1.1" viewBox="0 0 1512 696" width="1512.5px" zoomAndPan="magnify"><defs/><g><rect fill="#48494B" height="41.2028" rx="8.3333" ry="8.3333" style="stroke:#545454;stroke-width:1.0416666666666667;" width="655.2083" x="421.6146" y="2.0833"/><text fill="#C0C0C0" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="20.8333" lengthAdjust="spacing" textLength="632.2917" x="433.0729" y="30.5583">com.telenav.kivakit.core.kernel.language.collections.map.count</text><!--MD5=[c9e8972205f2128a99bf055e41d1b9aa]
class ConcurrentCountMap--><rect codeLine="6" fill="#282828" height="510.5204" id="ConcurrentCountMap" rx="8.3333" ry="8.3333" style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" width="761.4583" x="7.2917" y="118.2861"/><rect fill="#1B1B1A" height="31.3883" rx="8.3333" ry="8.3333" style="stroke:#1B1B1A;stroke-width:1.0416666666666667;" width="761.4583" x="7.2917" y="118.2861"/><rect fill="#1B1B1A" height="8.3333" style="stroke:#1B1B1A;stroke-width:1.0416666666666667;" width="761.4583" x="7.2917" y="141.3411"/><rect codeLine="6" fill="none" height="510.5204" id="ConcurrentCountMap" rx="8.3333" ry="8.3333" style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" width="761.4583" x="7.2917" y="118.2861"/><ellipse cx="302.0833" cy="133.9803" fill="#0066CF" rx="10.4167" ry="10.4167" style="stroke:#0086EF;stroke-width:1.0416666666666667;"/><path d="M303.9937,138.4054 Q303.5665,138.6251 303.0965,138.7349 Q302.6265,138.8448 302.1077,138.8448 Q300.2645,138.8448 299.294,137.6302 Q298.3236,136.4156 298.3236,134.1207 Q298.3236,131.8197 299.294,130.6051 Q300.2645,129.3905 302.1077,129.3905 Q302.6265,129.3905 303.1026,129.5003 Q303.5787,129.6102 303.9937,129.8299 L303.9937,131.8319 Q303.5299,131.4046 303.0935,131.2063 Q302.6571,131.0079 302.1932,131.0079 Q301.2044,131.0079 300.7009,131.7922 Q300.1973,132.5765 300.1973,134.1207 Q300.1973,135.6588 300.7009,136.4431 Q301.2044,137.2274 302.1932,137.2274 Q302.6571,137.2274 303.0935,137.029 Q303.5299,136.8306 303.9937,136.4034 Z " fill="#000000"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="12.5" font-weight="bold" lengthAdjust="spacing" textLength="138.5417" x="325" y="138.7044">ConcurrentCountMap</text><rect fill="#333333" height="23.055" style="stroke:#A0A0A0;stroke-width:1.0416666666666667;stroke-dasharray:2.0,2.0;" width="16.6667" x="755.2083" y="115.1611"/><text fill="#A0A0A0" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="12.5" font-weight="bold" lengthAdjust="spacing" textLength="8.3333" x="759.375" y="131.4128">T</text><line style="stroke:#5E5E5E;stroke-width:1.5625;" x1="8.3333" x2="767.7083" y1="149.6745" y2="149.6745"/><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="8.3333" x2="767.7083" y1="158.0078" y2="158.0078"/><ellipse cx="18.75" cy="169.4661" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="254.1667" x="30.2083" y="176.3774">void mergeIn(ConcurrentCountMap&lt;T&gt; that)</text><ellipse cx="18.75" cy="189.211" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="61.4583" x="30.2083" y="196.1222">long total()</text><ellipse cx="18.75" cy="232.8674" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="159.375" x="30.2083" y="239.7786">Count add(T key, long value)</text><ellipse cx="18.75" cy="252.6123" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="305.2083" x="30.2083" y="259.5235">ConcurrentCountMap&lt;T&gt; add(T key, Countable value)</text><ellipse cx="18.75" cy="272.3572" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="282.2917" x="30.2083" y="279.2684">ConcurrentCountMap&lt;T&gt; add(T key, Count value)</text><ellipse cx="18.75" cy="292.1021" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="133.3333" x="30.2083" y="299.0133">boolean contains(T key)</text><ellipse cx="18.75" cy="311.8469" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="107.2917" x="30.2083" y="318.7581">Count count(T key)</text><ellipse cx="18.75" cy="331.5918" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="247.9167" x="30.2083" y="338.503">ConcurrentCountMap&lt;T&gt; decrement(T key)</text><ellipse cx="18.75" cy="351.3367" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="642.7083" x="30.2083" y="358.2479">List&lt;Map.Entry&lt;T,AtomicLong&gt;&gt; descendingEntries(Count maximum, Comparator&lt;Map.Entry&lt;T,AtomicLong&gt;&gt;)</text><ellipse cx="18.75" cy="371.0815" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="244.7917" x="30.2083" y="377.9928">ConcurrentCountMap&lt;T&gt; increment(T key)</text><ellipse cx="18.75" cy="390.8264" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="129.1667" x="30.2083" y="397.7376">Collection&lt;T&gt; keySet()</text><ellipse cx="18.75" cy="410.5713" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="729.1667" x="30.2083" y="417.4825">ConcurrentCountMap&lt;T&gt; parse(Factory&lt;ConcurrentCountMap&lt;T&gt;&gt; mapFactory, MapFactory&lt;String,T&gt; keyFactory, String text)</text><ellipse cx="18.75" cy="430.3162" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="282.2917" x="30.2083" y="437.2274">ConcurrentCountMap&lt;T&gt; prune(Count minimum)</text><ellipse cx="18.75" cy="450.061" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="106.25" x="30.2083" y="456.9722">void remove(T key)</text><ellipse cx="18.75" cy="469.8059" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="47.9167" x="30.2083" y="476.7171">int size()</text><ellipse cx="18.75" cy="489.5508" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="206.25" x="30.2083" y="496.462">List&lt;T&gt; sortedByDescendingCount()</text><ellipse cx="18.75" cy="509.2957" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="119.7917" x="30.2083" y="516.2069">List&lt;T&gt; sortedKeys()</text><ellipse cx="18.75" cy="529.0405" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="213.5417" x="30.2083" y="535.9517">List&lt;T&gt; sortedKeys(Comparator&lt;T&gt;)</text><ellipse cx="18.75" cy="548.7854" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="270.8333" x="30.2083" y="555.6966">ConcurrentCountMap&lt;T&gt; top(Count maximum)</text><ellipse cx="18.75" cy="568.5303" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="515.625" x="30.2083" y="575.4415">ConcurrentCountMap&lt;T&gt; top(Count maximum, Comparator&lt;Map.Entry&lt;T,AtomicLong&gt;&gt;)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="8.3333" x2="353.6458" y1="215.7033" y2="215.7033"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="62.5" x="356.7708" y="219.5129">(collection)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="422.3958" x2="767.7083" y1="215.7033" y2="215.7033"/><ellipse cx="18.75" cy="612.1867" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="70.8333" x="30.2083" y="619.0979">T minimum()</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="8.3333" x2="366.6667" y1="595.0226" y2="595.0226"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="36.4583" x="369.7917" y="598.8322">(math)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="409.375" x2="767.7083" y1="595.0226" y2="595.0226"/><!--MD5=[1447774c386a3c38894124e95e4deb11]
class CountMap--><rect codeLine="34" fill="#282828" height="633.1563" id="CountMap" rx="8.3333" ry="8.3333" style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" width="695.8333" x="805.7292" y="56.8278"/><rect fill="#1B1B1A" height="31.3883" rx="8.3333" ry="8.3333" style="stroke:#1B1B1A;stroke-width:1.0416666666666667;" width="695.8333" x="805.7292" y="56.8278"/><rect fill="#1B1B1A" height="8.3333" style="stroke:#1B1B1A;stroke-width:1.0416666666666667;" width="695.8333" x="805.7292" y="79.8828"/><rect codeLine="34" fill="none" height="633.1563" id="CountMap" rx="8.3333" ry="8.3333" style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" width="695.8333" x="805.7292" y="56.8278"/><ellipse cx="1103.6458" cy="72.522" fill="#0066CF" rx="10.4167" ry="10.4167" style="stroke:#0086EF;stroke-width:1.0416666666666667;"/><path d="M1105.5562,76.947 Q1105.129,77.1667 1104.659,77.2766 Q1104.189,77.3865 1103.6702,77.3865 Q1101.827,77.3865 1100.8565,76.1719 Q1099.8861,74.9573 1099.8861,72.6624 Q1099.8861,70.3613 1100.8565,69.1467 Q1101.827,67.9321 1103.6702,67.9321 Q1104.189,67.9321 1104.6651,68.042 Q1105.1412,68.1519 1105.5562,68.3716 L1105.5562,70.3735 Q1105.0924,69.9463 1104.656,69.7479 Q1104.2196,69.5496 1103.7557,69.5496 Q1102.7669,69.5496 1102.2634,70.3339 Q1101.7598,71.1182 1101.7598,72.6624 Q1101.7598,74.2004 1102.2634,74.9847 Q1102.7669,75.769 1103.7557,75.769 Q1104.2196,75.769 1104.656,75.5707 Q1105.0924,75.3723 1105.5562,74.9451 Z " fill="#000000"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="12.5" font-weight="bold" lengthAdjust="spacing" textLength="66.6667" x="1126.5625" y="77.2461">CountMap</text><rect fill="#333333" height="23.055" style="stroke:#A0A0A0;stroke-width:1.0416666666666667;stroke-dasharray:2.0,2.0;" width="16.6667" x="1488.0208" y="53.7028"/><text fill="#A0A0A0" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="12.5" font-weight="bold" lengthAdjust="spacing" textLength="8.3333" x="1492.1875" y="69.9544">T</text><line style="stroke:#5E5E5E;stroke-width:1.5625;" x1="806.7708" x2="1500.5208" y1="88.2161" y2="88.2161"/><ellipse cx="817.1875" cy="123.586" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="65.625" x="828.6458" y="130.4972">CountMap()</text><ellipse cx="817.1875" cy="143.3309" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="100" x="828.6458" y="150.2421">CountMap(Count)</text><ellipse cx="817.1875" cy="163.0758" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="148.9583" x="828.6458" y="169.987">CountMap(CountMap&lt;T&gt;)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="806.7708" x2="1109.8958" y1="106.4219" y2="106.4219"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="81.25" x="1113.0208" y="110.2315">(constructors)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="1197.3958" x2="1500.5208" y1="106.4219" y2="106.4219"/><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="806.7708" x2="1500.5208" y1="179.6956" y2="179.6956"/><ellipse cx="817.1875" cy="191.154" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="189.5833" x="828.6458" y="198.0652">void mergeIn(CountMap&lt;T&gt; that)</text><ellipse cx="817.1875" cy="210.8988" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="61.4583" x="828.6458" y="217.8101">long total()</text><ellipse cx="817.1875" cy="254.5553" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="159.375" x="828.6458" y="261.4665">Count add(T key, long value)</text><ellipse cx="817.1875" cy="274.3001" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="240.625" x="828.6458" y="281.2113">CountMap&lt;T&gt; add(T key, Countable value)</text><ellipse cx="817.1875" cy="294.045" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="656.25" x="828.6458" y="300.9562">List&lt;Map.Entry&lt;T,MutableCount&gt;&gt; ascendingEntries(Count maximum, Comparator&lt;Map.Entry&lt;T,MutableCount&gt;&gt;)</text><ellipse cx="817.1875" cy="313.7899" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="483.3333" x="828.6458" y="320.7011">CountMap&lt;T&gt; bottom(Count maximum, Comparator&lt;Map.Entry&lt;T,MutableCount&gt;&gt;)</text><ellipse cx="817.1875" cy="333.5347" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="228.125" x="828.6458" y="340.446">CountMap&lt;T&gt; bottom(Count maximum)</text><ellipse cx="817.1875" cy="353.2796" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="133.3333" x="828.6458" y="360.1908">boolean contains(T key)</text><ellipse cx="817.1875" cy="373.0245" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="107.2917" x="828.6458" y="379.9357">Count count(T key)</text><ellipse cx="817.1875" cy="392.7694" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="183.3333" x="828.6458" y="399.6806">CountMap&lt;T&gt; decrement(T key)</text><ellipse cx="817.1875" cy="412.5142" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="663.5417" x="828.6458" y="419.4255">List&lt;Map.Entry&lt;T,MutableCount&gt;&gt; descendingEntries(Count maximum, Comparator&lt;Map.Entry&lt;T,MutableCount&gt;&gt;)</text><ellipse cx="817.1875" cy="432.2591" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="180.2083" x="828.6458" y="439.1703">CountMap&lt;T&gt; increment(T key)</text><ellipse cx="817.1875" cy="452.004" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="129.1667" x="828.6458" y="458.9152">Collection&lt;T&gt; keySet()</text><ellipse cx="817.1875" cy="471.7489" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="217.7083" x="828.6458" y="478.6601">CountMap&lt;T&gt; prune(Count minimum)</text><ellipse cx="817.1875" cy="491.4937" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="106.25" x="828.6458" y="498.4049">void remove(T key)</text><ellipse cx="817.1875" cy="511.2386" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="175" x="828.6458" y="518.1498">void removeAll(CountMap&lt;T&gt;)</text><ellipse cx="817.1875" cy="530.9835" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="47.9167" x="828.6458" y="537.8947">int size()</text><ellipse cx="817.1875" cy="550.7284" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="206.25" x="828.6458" y="557.6396">List&lt;T&gt; sortedByDescendingCount()</text><ellipse cx="817.1875" cy="570.4732" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="119.7917" x="828.6458" y="577.3844">List&lt;T&gt; sortedKeys()</text><ellipse cx="817.1875" cy="590.2181" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="213.5417" x="828.6458" y="597.1293">List&lt;T&gt; sortedKeys(Comparator&lt;T&gt;)</text><ellipse cx="817.1875" cy="609.963" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="206.25" x="828.6458" y="616.8742">CountMap&lt;T&gt; top(Count maximum)</text><ellipse cx="817.1875" cy="629.7078" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="461.4583" x="828.6458" y="636.6191">CountMap&lt;T&gt; top(Count maximum, Comparator&lt;Map.Entry&lt;T,MutableCount&gt;&gt;)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="806.7708" x2="1119.2708" y1="237.3912" y2="237.3912"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="62.5" x="1122.3958" y="241.2008">(collection)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="1188.0208" x2="1500.5208" y1="237.3912" y2="237.3912"/><ellipse cx="817.1875" cy="673.3643" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="70.8333" x="828.6458" y="680.2755">T minimum()</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="806.7708" x2="1132.2917" y1="656.2002" y2="656.2002"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="36.4583" x="1135.4167" y="660.0098">(math)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="1175" x2="1500.5208" y1="656.2002" y2="656.2002"/><!--MD5=[0daa448fa655a1ea918ce47068978d11]
@startuml

    !include ../lexakai.theme
    
    title "com.telenav.kivakit.core.kernel.language.collections.map.count"
    
    class ConcurrentCountMap<T>
    {
        - -
        +void mergeIn(ConcurrentCountMap<T> that)
        +long total()
        - -(collection)- -
        +Count add(T key, long value)
        +ConcurrentCountMap<T> add(T key, Countable value)
        +ConcurrentCountMap<T> add(T key, Count value)
        +boolean contains(T key)
        +Count count(T key)
        +ConcurrentCountMap<T> decrement(T key)
        +List<Map.Entry<T,AtomicLong>> descendingEntries(Count maximum, Comparator<Map.Entry<T,AtomicLong>>)
        +ConcurrentCountMap<T> increment(T key)
        +Collection<T> keySet()
        +ConcurrentCountMap<T> parse(Factory<ConcurrentCountMap<T>> mapFactory, MapFactory<String,T> keyFactory, String text)
        +ConcurrentCountMap<T> prune(Count minimum)
        +void remove(T key)
        +int size()
        +List<T> sortedByDescendingCount()
        +List<T> sortedKeys()
        +List<T> sortedKeys(Comparator<T>)
        +ConcurrentCountMap<T> top(Count maximum)
        +ConcurrentCountMap<T> top(Count maximum, Comparator<Map.Entry<T,AtomicLong>>)
        - -(math)- -
        +T minimum()
    }
    
    class CountMap<T>
    {
        - -(constructors)- -
        +CountMap()
        +CountMap(Count)
        +CountMap(CountMap<T>)
        - -
        +void mergeIn(CountMap<T> that)
        +long total()
        - -(collection)- -
        +Count add(T key, long value)
        +CountMap<T> add(T key, Countable value)
        +List<Map.Entry<T,MutableCount>> ascendingEntries(Count maximum, Comparator<Map.Entry<T,MutableCount>>)
        +CountMap<T> bottom(Count maximum, Comparator<Map.Entry<T,MutableCount>>)
        +CountMap<T> bottom(Count maximum)
        +boolean contains(T key)
        +Count count(T key)
        +CountMap<T> decrement(T key)
        +List<Map.Entry<T,MutableCount>> descendingEntries(Count maximum, Comparator<Map.Entry<T,MutableCount>>)
        +CountMap<T> increment(T key)
        +Collection<T> keySet()
        +CountMap<T> prune(Count minimum)
        +void remove(T key)
        +void removeAll(CountMap<T>)
        +int size()
        +List<T> sortedByDescendingCount()
        +List<T> sortedKeys()
        +List<T> sortedKeys(Comparator<T>)
        +CountMap<T> top(Count maximum)
        +CountMap<T> top(Count maximum, Comparator<Map.Entry<T,MutableCount>>)
        - -(math)- -
        +T minimum()
    }
    
@enduml

@startuml









skinparam backgroundColor #333333






skinparam  {
    defaultFontName   "Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif"
    defaultFontSize   12
    defaultTextAlignment left
    shadowing false
    RoundCorner 10
    TitleFontSize 18
}

skinparam defaultFontName       "Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif"
skinparam defaultFontSize       12
skinparam dpi                   100
skinparam shadowing             false
skinparam roundcorner           16
skinparam ParticipantPadding    40
skinparam BoxPadding            40
skinparam Padding               3
skinparam ArrowColor            #545454
skinparam stereotype {
    CBackgroundColor #0066cf
    CBorderColor #0086ef
    ABackgroundColor #C8Ac00
    ABorderColor #D8Bc00
    IBackgroundColor #008400
    IBorderColor #239c23
    EBackgroundColor #cf6300
    EBorderColor #ef8300
    NBackgroundColor #3380b9
    NBorderColor #004d86
}
skinparam title {
	FontColor	                 #c0c0c0
 	BorderColor                  #545454
	FontSize	    	         20
	BorderRoundCorner            16
	BorderThickness 	         1
	BackgroundColor              #48494b
}


skinparam legend {
	BackgroundColor #303030
	BorderColor #404040
	FontColor #a0a0a0
}

	skinparam swimlane {
	BorderColor #5e5e5e
	BorderThickness 2
	TitleBackgroundColor  #6d6d6d-#484848
	TitleFontColor #303030
}

skinparam activity {
		FontColor #C8Ac00
	BorderColor #333333
	BackgroundColor #333333-#333333
	BarColor #00FF00
	StartColor #0060a8
	EndColor #0060a8
	DiamondBackgroundColor #6d6d6d-#3a3a3a
  	DiamondBorderColor #3a3a3a
  	DiamondFontColor #fefefe
}


skinparam participant {
		FontColor #C8Ac00
	BorderColor #333333
	BackgroundColor #333333-#333333
	ParticipantBorderThickness 2
}


skinparam actor {
		FontColor #C8Ac00
	BorderColor #333333
	BackgroundColor #333333-#333333
}


skinparam arrow {
	Thickness 1.5
	Color #545454
	FontColor #a0a0a0
    FontStyle bold
    MessageAlignment center
}



skinparam sequence {
	BorderColor #303030
	TitleFontColor #303030
	BackgroundColor #333333
	StartColor #303030
	EndColor #303030
	BoxBackgroundColor #333333
	BoxBorderColor #484848
	BoxFontColor #484848
	LifeLineBorderColor #484848
	LifeLineBorderThickness 2
	LifeLineBackgroundColor #3a3a3a
	GroupBorderColor #484848
	GroupFontColor #484848
	GroupHeaderFontColor #0060a8
	GroupBackgroundColor #484848
	GroupHeaderBackgroundColor #333333
	DividerBackgroundColor #484848
    DividerBorderColor #484848
    DividerBorderThickness 2
    DividerFontColor #D8Bc00
	ReferenceBackgroundColor #333333
	ReferenceBorderColor #484848
	ReferenceFontColor #fefefe
	ReferenceHeaderBackgroundColor #484848
}


skinparam partition {
	BorderColor #303030
	FontColor #333333
	BackgroundColor #333333
}


skinparam collections {
		FontColor #C8Ac00
	BorderColor #333333
	BackgroundColor #333333-#333333
}


skinparam control {
		FontColor #C8Ac00
	BorderColor #333333
	BackgroundColor #333333-#333333
}


skinparam entity {
		FontColor #C8Ac00
	BorderColor #333333
	BackgroundColor #333333-#333333
}


skinparam boundary {
		FontColor #C8Ac00
	BorderColor #333333
	BackgroundColor #333333-#333333
}


skinparam agent {
	BackgroundColor #ff8000
	BorderColor #ff9933
	FontColor #484848
}


skinparam note {
	BorderThickness 1
	BackgroundColor #1b1b1a
	BorderColor #5e5e5e
	FontSize 11
	FontColor #a0a0a0
}


skinparam artifact {
	BorderThickness 10
	BorderColor #5e5e5e
	BackgroundColor #1b1b1a
	FontColor #D8Bc00
}


skinparam component {
		FontColor #C8Ac00
	BorderColor #333333
	BackgroundColor #333333-#333333
}


skinparam interface {
	BackgroundColor  #008400
	BorderColor  #007F00
	FontColor #484848
}


skinparam storage {
	BackgroundColor #ff8000
  	BorderColor #cc6600
	FontColor #222222
}


skinparam node {
	BackgroundColor #333333
	BorderColor #333333
	FontColor #C8Ac00
}


skinparam cloud {
	BackgroundColor #484848-black
	BorderColor #484848
	FontColor #D8Bc00
}


skinparam database {
		FontColor #C8Ac00
	BorderColor #333333
	BackgroundColor #333333-#333333
	BackgroundColor  #333333
}


skinparam class {
		FontColor #C8Ac00
	BorderColor #333333
	BackgroundColor #333333-#333333
	HeaderBackgroundColor #1b1b1a
    BackgroundColor #282828
    BorderColor #5e5e5e
 	StereotypeFontColor #a0a0a0
    StereotypeFontStyle bold
	BorderThickness 1
	AttributeFontColor #D8Bc00
	AttributeFontSize 11
    FontColor #D8Bc00
    FontStyle bold
}


skinparam object {
		FontColor #C8Ac00
	BorderColor #333333
	BackgroundColor #333333-#333333
	StereotypeFontColor #484848
	BorderThickness 1
	AttributeFontColor #fefefe
	AttributeFontSize 11
}


skinparam usecase {
		FontColor #C8Ac00
	BorderColor #333333
	BackgroundColor #333333-#333333
	BorderThickness 2
	StereotypeFontColor #303030
}


skinparam rectangle {
		FontColor #C8Ac00
	BorderColor #333333
	BackgroundColor #333333-#333333
	BackgroundColor #333333
	BorderThickness 2
	StereotypeFontColor #303030
}


skinparam package {
		FontColor #C8Ac00
	BorderColor #333333
	BackgroundColor #333333-#333333
	BackgroundColor #333333
	BorderThickness 2
}


skinparam folder {
	BackgroundColor #6d6d6d
  	BorderColor #ff8000
	FontColor #ff8000
	BorderThickness 2
}


skinparam frame {
	BackgroundColor #6d6d6d
  	BorderColor #0060a8
	FontColor #0060a8
	BorderThickness 2
}


skinparam state {
		FontColor #C8Ac00
	BorderColor #333333
	BackgroundColor #333333-#333333
	StartColor #0060a8
	EndColor #0060a8
	AttributeFontColor #fefefe
	AttributeFontSize 11
}


skinparam queue {
		FontColor #C8Ac00
	BorderColor #333333
	BackgroundColor #333333-#333333
}


skinparam card {
	BackgroundColor #0060a8
	BorderColor #004d86
	FontColor $INFO_TEXT
}


skinparam file {
	BackgroundColor #6d6d6d-#484848
	BorderColor #0060a8
	FontColor #fefefe
}


skinparam stack {
		FontColor #C8Ac00
	BorderColor #333333
	BackgroundColor #333333-#333333
}

    
    title "com.telenav.kivakit.core.kernel.language.collections.map.count"
    
    class ConcurrentCountMap<T>
    {
        - -
        +void mergeIn(ConcurrentCountMap<T> that)
        +long total()
        - -(collection)- -
        +Count add(T key, long value)
        +ConcurrentCountMap<T> add(T key, Countable value)
        +ConcurrentCountMap<T> add(T key, Count value)
        +boolean contains(T key)
        +Count count(T key)
        +ConcurrentCountMap<T> decrement(T key)
        +List<Map.Entry<T,AtomicLong>> descendingEntries(Count maximum, Comparator<Map.Entry<T,AtomicLong>>)
        +ConcurrentCountMap<T> increment(T key)
        +Collection<T> keySet()
        +ConcurrentCountMap<T> parse(Factory<ConcurrentCountMap<T>> mapFactory, MapFactory<String,T> keyFactory, String text)
        +ConcurrentCountMap<T> prune(Count minimum)
        +void remove(T key)
        +int size()
        +List<T> sortedByDescendingCount()
        +List<T> sortedKeys()
        +List<T> sortedKeys(Comparator<T>)
        +ConcurrentCountMap<T> top(Count maximum)
        +ConcurrentCountMap<T> top(Count maximum, Comparator<Map.Entry<T,AtomicLong>>)
        - -(math)- -
        +T minimum()
    }
    
    class CountMap<T>
    {
        - -(constructors)- -
        +CountMap()
        +CountMap(Count)
        +CountMap(CountMap<T>)
        - -
        +void mergeIn(CountMap<T> that)
        +long total()
        - -(collection)- -
        +Count add(T key, long value)
        +CountMap<T> add(T key, Countable value)
        +List<Map.Entry<T,MutableCount>> ascendingEntries(Count maximum, Comparator<Map.Entry<T,MutableCount>>)
        +CountMap<T> bottom(Count maximum, Comparator<Map.Entry<T,MutableCount>>)
        +CountMap<T> bottom(Count maximum)
        +boolean contains(T key)
        +Count count(T key)
        +CountMap<T> decrement(T key)
        +List<Map.Entry<T,MutableCount>> descendingEntries(Count maximum, Comparator<Map.Entry<T,MutableCount>>)
        +CountMap<T> increment(T key)
        +Collection<T> keySet()
        +CountMap<T> prune(Count minimum)
        +void remove(T key)
        +void removeAll(CountMap<T>)
        +int size()
        +List<T> sortedByDescendingCount()
        +List<T> sortedKeys()
        +List<T> sortedKeys(Comparator<T>)
        +CountMap<T> top(Count maximum)
        +CountMap<T> top(Count maximum, Comparator<Map.Entry<T,MutableCount>>)
        - -(math)- -
        +T minimum()
    }
    
@enduml

PlantUML version 1.2021.01(Tue Feb 02 00:55:08 MST 2021)
(GPL source distribution)
Java Runtime: Java(TM) SE Runtime Environment
JVM: Java HotSpot(TM) 64-Bit Server VM
Default Encoding: UTF-8
Language: en
Country: US
--></g></svg>